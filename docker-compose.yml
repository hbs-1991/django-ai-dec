version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ai_declarant
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  backend:
    build: 
      context: .
      dockerfile: docker/Dockerfile.backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - media_volume:/app/media
      - static_volume:/app/static
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - USE_DOCKER=true
      - DATABASE_URL=postgresql://postgres:password@db:5432/ai_declarant
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DJANGO_SETTINGS_MODULE=config.settings.dev

  celery:
    build: 
      context: .
      dockerfile: docker/Dockerfile.backend
    command: celery -A config worker -l info
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - USE_DOCKER=true
      - DATABASE_URL=postgresql://postgres:password@db:5432/ai_declarant
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DJANGO_SETTINGS_MODULE=config.settings.dev

  frontend:
    build: 
      context: .
      dockerfile: docker/Dockerfile.frontend
    command: streamlit run app.py --server.port=8501 --server.address=0.0.0.0
    volumes:
      - ./frontend_streamlit:/app
    ports:
      - "8501:8501"
    depends_on:
      - backend

volumes:
  postgres_data:
  media_volume:
  static_volume:
