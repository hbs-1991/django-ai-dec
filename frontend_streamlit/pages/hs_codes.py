"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ HS –∫–æ–¥–æ–≤
"""

import streamlit as st
import pandas as pd
from utils.api_client import APIClient



def get_categories(api: APIClient):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    try:
        categories = api.get_hs_categories()
        return categories
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}")
        return []

def show_search_results(api: APIClient, query: str, category_filter: str, sort_by: str):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞"""
    
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
        if query:
            results = api.search_hs_codes(query)
        else:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–¥—ã
            response = api.get('/hs-codes/')
            results = response.get('results', []) if response else []
        
        if not results:
            st.warning("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É")
            return
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if category_filter != "–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏":
            results = [r for r in results if r.get('category') == category_filter]
        
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        if sort_by == "–ü–æ –∫–æ–¥—É":
            results.sort(key=lambda x: x.get('code', ''))
        elif sort_by == "–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é":
            results.sort(key=lambda x: x.get('description', ''))
        elif sort_by == "–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏":
            results.sort(key=lambda x: x.get('category', ''))
        
        st.subheader(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ ({len(results)})")
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        for result in results:
            show_hs_code_card(result)
    
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")

def show_browse_interface(api: APIClient, category_filter: str, sort_by: str):
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–¥–æ–≤"""
    
    st.subheader("üìö –û–±–∑–æ—Ä —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–¥—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
        response = api.get('/hs-codes/')
        
        if not response:
            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫")
            return
        
        codes = response.get('results', [])
        total_count = response.get('count', 0)
        
        if not codes:
            st.info("–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø—É—Å—Ç")
            return
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if category_filter != "–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏":
            codes = [c for c in codes if c.get('category') == category_filter]
        
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        if sort_by == "–ü–æ –∫–æ–¥—É":
            codes.sort(key=lambda x: x.get('code', ''))
        elif sort_by == "–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é":
            codes.sort(key=lambda x: x.get('description', ''))
        elif sort_by == "–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏":
            codes.sort(key=lambda x: x.get('category', ''))
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.metric("üìä –í—Å–µ–≥–æ –∫–æ–¥–æ–≤", total_count)
        
        with col2:
            st.metric("üîç –ü–æ–∫–∞–∑–∞–Ω–æ", len(codes))
        
        with col3:
            unique_categories = len(set(c.get('category', '') for c in codes))
            st.metric("üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–π", unique_categories)
        
        st.markdown("---")
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ–¥—ã
        for code in codes:
            show_hs_code_card(code)
    
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞: {e}")

def show_hs_code_card(hs_code):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ HS –∫–æ–¥–∞"""
    
    with st.container():
        col1, col2, col3 = st.columns([2, 3, 1])
        
        with col1:
            # –ö–æ–¥ HS
            st.markdown(f"### `{hs_code.get('code', 'N/A')}`")
        
        with col2:
            # –û–ø–∏—Å–∞–Ω–∏–µ
            st.markdown(f"**{hs_code.get('description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}**")
            
            # –ö–∞—Ç–µ–≥–æ—Ä–∏—è
            category = hs_code.get('category', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
            subcategory = hs_code.get('subcategory', '')
            
            if subcategory and subcategory != '–û–±—â–∞—è –≥—Ä—É–ø–ø–∞':
                st.caption(f"üìÅ {category} ‚Üí {subcategory}")
            else:
                st.caption(f"üìÅ {category}")
        
        with col3:
            # –ö–Ω–æ–ø–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            if st.button("üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å", key=f"copy_{hs_code.get('id')}", help="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"):
                st.info(f"–ö–æ–¥ {hs_code.get('code')} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–º –≤–∏–¥–µ
        with st.expander("‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏", expanded=False):
            col1, col2 = st.columns(2)
            
            with col1:
                st.markdown(f"""
                **–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
                - –ö–æ–¥: `{hs_code.get('code', 'N/A')}`
                - –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {hs_code.get('category', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}
                - –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {hs_code.get('subcategory', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}
                - –°—Ç–∞—Ç—É—Å: {'–ê–∫—Ç–∏–≤–Ω—ã–π' if hs_code.get('is_active', True) else '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π'}
                """)
            
            with col2:
                created_at = hs_code.get('created_at', '')
                updated_at = hs_code.get('updated_at', '')
                
                st.markdown(f"""
                **–ú–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
                - ID: {hs_code.get('id', 'N/A')}
                - –°–æ–∑–¥–∞–Ω: {format_date(created_at)}
                - –û–±–Ω–æ–≤–ª–µ–Ω: {format_date(updated_at)}
                """)
            
            # –ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
            st.markdown("**üí° –ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ–¥–∞:**")
            examples = get_code_examples(hs_code.get('code', ''))
            if examples:
                for example in examples:
                    st.write(f"‚Ä¢ {example}")
            else:
                st.caption("–ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        st.markdown("---")

def get_code_examples(hs_code: str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è HS –∫–æ–¥–∞"""
    
    # –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–º–µ—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–¥–∞ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
    examples_map = {
        '8703': [
            '–ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –ª–µ–≥–∫–æ–≤—ã–µ',
            '–°–µ–¥–∞–Ω Toyota Camry',
            '–•—ç—Ç—á–±–µ–∫ Volkswagen Golf',
            '–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫ BMW X5'
        ],
        '0901': [
            '–ö–æ—Ñ–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –≤ –∑–µ—Ä–Ω–∞—Ö',
            '–ö–æ—Ñ–µ –∞—Ä–∞–±–∏–∫–∞',
            '–ö–æ—Ñ–µ —Ä–æ–±—É—Å—Ç–∞',
            '–ó–µ–ª–µ–Ω—ã–π –∫–æ—Ñ–µ'
        ],
        '6203': [
            '–ö–æ—Å—Ç—é–º—ã –º—É–∂—Å–∫–∏–µ',
            '–ë—Ä—é–∫–∏ –¥–µ–ª–æ–≤—ã–µ',
            '–ü–∏–¥–∂–∞–∫–∏ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ',
            '–ñ–∏–ª–µ—Ç—ã –º—É–∂—Å–∫–∏–µ'
        ],
        '8471': [
            '–ö–æ–º–ø—å—é—Ç–µ—Ä—ã –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ',
            '–ù–æ—É—Ç–±—É–∫–∏',
            '–ü–ª–∞–Ω—à–µ—Ç–Ω—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã',
            '–°–µ—Ä–≤–µ—Ä—ã'
        ]
    }
    
    # –ò—â–µ–º –ø–æ –Ω–∞—á–∞–ª—É –∫–æ–¥–∞
    for code_prefix, examples in examples_map.items():
        if hs_code.startswith(code_prefix):
            return examples
    
    return []

def format_date(date_str: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã"""
    if not date_str:
        return "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    
    try:
        from datetime import datetime
        if 'T' in date_str:
            dt = datetime.fromisoformat(date_str.replace('Z', '+00:00'))
            return dt.strftime('%d.%m.%Y')
    except:
        pass
    
    return date_str[:10] if len(date_str) > 10 else date_str

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å–µ–∫—Ü–∏—è —Å –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
def show_hs_info_section():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–µ–∫—Ü–∏–∏ –æ HS –∫–æ–¥–∞—Ö"""
    
    st.markdown("---")
    st.subheader("‚ÑπÔ∏è –û –∫–æ–¥–∞—Ö –¢–ù –í–≠–î")
    
    with st.expander("üìñ –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–¥—ã –¢–ù –í–≠–î?", expanded=False):
        st.markdown("""
        **–¢–æ–≤–∞—Ä–Ω–∞—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞ –≤–Ω–µ—à–Ω–µ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–¢–ù –í–≠–î)** ‚Äî 
        —ç—Ç–æ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–æ–≤, –ø—Ä–∏–º–µ–Ω—è–µ–º—ã–π –¥–ª—è —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è.
        
        **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–¥–∞:**
        - –ü–µ—Ä–≤—ã–µ 2 —Ü–∏—Ñ—Ä—ã ‚Äî –≥—Ä—É–ø–ø–∞ —Ç–æ–≤–∞—Ä–æ–≤
        - 3-4 —Ü–∏—Ñ—Ä—ã ‚Äî —Ç–æ–≤–∞—Ä–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è  
        - 5-6 —Ü–∏—Ñ—Ä—ã ‚Äî —Å—É–±–ø–æ–∑–∏—Ü–∏—è
        - 7-8 —Ü–∏—Ñ—Ä—ã ‚Äî –ø–æ–¥—Å—É–±–ø–æ–∑–∏—Ü–∏—è
        - 9-10 —Ü–∏—Ñ—Ä—ã ‚Äî –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥—Å—É–±–ø–æ–∑–∏—Ü–∏—è
        
        **–ü—Ä–∏–º–µ—Ä—ã:**
        - `87` ‚Äî –°—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞–∑–µ–º–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
        - `8703` ‚Äî –ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –ª–µ–≥–∫–æ–≤—ã–µ
        - `8703.10` ‚Äî –° –∏—Å–∫—Ä–æ–≤—ã–º –∑–∞–∂–∏–≥–∞–Ω–∏–µ–º, –æ–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è ‚â§ 1000 —Å–º¬≥
        """)
    
    with st.expander("üéØ –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–æ–¥?", expanded=False):
        st.markdown("""
        **–ü—Ä–∏–Ω—Ü–∏–ø—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏:**
        
        1. **–ú–∞—Ç–µ—Ä–∏–∞–ª –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è** ‚Äî –∏–∑ —á–µ–≥–æ —Å–¥–µ–ª–∞–Ω —Ç–æ–≤–∞—Ä
        2. **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ** ‚Äî –¥–ª—è —á–µ–≥–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω
        3. **–°—Ç–µ–ø–µ–Ω—å –æ–±—Ä–∞–±–æ—Ç–∫–∏** ‚Äî —Å—ã—Ä—å–µ, –ø–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç –∏–ª–∏ –≥–æ—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä
        4. **–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏** ‚Äî —Ñ–æ—Ä–º–∞, —Ä–∞–∑–º–µ—Ä, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        
        **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
        - –ò–∑—É—á–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ
        - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
        - –ü—Ä–∏ —Å–æ–º–Ω–µ–Ω–∏—è—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å —Ç–∞–º–æ–∂–µ–Ω–Ω—ã–º –±—Ä–æ–∫–µ—Ä–æ–º
        - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ AI DECLARANT –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞
        """)

# –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é —Å–µ–∫—Ü–∏—é –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
def show_main_content():
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ HS –∫–æ–¥–æ–≤"""
    
    st.header("üîç –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ HS –∫–æ–¥–æ–≤")
    st.markdown("–ü–æ–∏—Å–∫ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–¥–æ–≤ –¢–æ–≤–∞—Ä–Ω–æ–π –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã –≤–Ω–µ—à–Ω–µ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
    
    # API –∫–ª–∏–µ–Ω—Ç
    api = APIClient()
    
    # –ü–æ–∏—Å–∫
    st.subheader("üîé –ü–æ–∏—Å–∫ –∫–æ–¥–æ–≤")
    
    col1, col2 = st.columns([3, 1])
    
    with col1:
        search_query = st.text_input(
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 8703 –∏–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å",
            help="–ü–æ–∏—Å–∫ –ø–æ –∫–æ–¥—É HS, –æ–ø–∏—Å–∞–Ω–∏—é —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
        )
    
    with col2:
        search_button = st.button("üîç –ù–∞–π—Ç–∏", type="primary", use_container_width=True)
    
    # –§–∏–ª—å—Ç—Ä—ã
    col1, col2 = st.columns(2)
    
    with col1:
        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = get_categories(api)
        category_filter = st.selectbox(
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è:",
            options=["–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"] + categories,
            index=0
        )
    
    with col2:
        sort_by = st.selectbox(
            "–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:",
            options=["–ü–æ –∫–æ–¥—É", "–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é", "–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"],
            index=0
        )
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
    if search_query or search_button:
        show_search_results(api, search_query, category_filter, sort_by)
    else:
        show_browse_interface(api, category_filter, sort_by)

# –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é show()
def show():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ HS –∫–æ–¥–æ–≤"""
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    show_main_content()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    show_hs_info_section() 