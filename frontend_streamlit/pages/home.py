"""
–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ AI DECLARANT
"""

import streamlit as st
import requests
from utils.api_client import APIClient

def show():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    st.markdown("""
    ## üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AI DECLARANT!
    
    –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–¥–æ–≤ –¢–ù –í–≠–î –¥–ª—è —Ç–∞–º–æ–∂–µ–Ω–Ω—ã—Ö –±—Ä–æ–∫–µ—Ä–æ–≤ –¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω–∞.
    –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ Excel –∏–ª–∏ CSV —Ñ–∞–π–ª—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —Ç–æ—á–Ω—ã–µ –∫–æ–¥—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏.
    """)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    col1, col2, col3, col4 = st.columns(4)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ API
    api = APIClient()
    
    with col1:
        st.metric(
            label="üìã HS –ö–æ–¥–æ–≤ –≤ –±–∞–∑–µ",
            value=get_hs_codes_count(),
            help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ HS –∫–æ–¥–æ–≤ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ"
        )
    
    with col2:
        st.metric(
            label="‚ö° –°—Ç–∞—Ç—É—Å API",
            value=get_api_status(),
            help="–°–æ—Å—Ç–æ—è–Ω–∏–µ REST API —Å–µ—Ä–≤–µ—Ä–∞"
        )
    
    with col3:
        st.metric(
            label="üîÑ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á",
            value="0",
            help="–ó–∞–¥–∞—á –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ"
        )
    
    with col4:
        st.metric(
            label="‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è",
            value="0",
            help="–¢–æ–≤–∞—Ä–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è"
        )
    
    st.markdown("---")
    
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
    st.subheader("üöÄ –ö–∞–∫ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
    
    with st.expander("üìñ –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", expanded=True):
        st.markdown("""
        ### –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ñ–∞–π–ª
        - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Excel (.xlsx, .xls) –∏–ª–∏ CSV —Ñ–æ—Ä–º–∞—Ç
        - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: **10 MB**
        - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π: **1000**
        - –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏: –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –µ–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è
        
        ### –®–∞–≥ 2: –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª
        - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤"
        - –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –µ–≥–æ –≤ –æ–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏
        - –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û–±—Ä–∞–±–æ—Ç–∞—Ç—å"
        
        ### –®–∞–≥ 3: –û—Ç—Å–ª–µ–¥–∏—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å
        - –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º –≤ —Ä–∞–∑–¥–µ–ª–µ "üìä –ú–æ–∏ –∑–∞–¥–∞—á–∏"
        - –ü–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        
        ### –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        - –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ HS –∫–æ–¥—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã"
        - –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∏–ª–∏ –∑–∞–º–µ–Ω–∏—Ç–µ –∫–æ–¥—ã
        - –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        """)
    
    # –ü—Ä–∏–º–µ—Ä—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
    st.subheader("üìÑ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Ñ–∞–π–ª–æ–≤")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("""
        **üìä Excel —Ñ–∞–π–ª—ã:**
        - .xlsx (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
        - .xls (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç)
        
        **üìù CSV —Ñ–∞–π–ª—ã:**
        - .csv —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º –∑–∞–ø—è—Ç–∞—è
        - UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫–∞
        """)
    
    with col2:
        st.markdown("""
        **üìã –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏:**
        - –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
        - –ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è
        
        **üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏:**
        - –°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è
        - –°—Ç–æ–∏–º–æ—Å—Ç—å
        - –û–ø–∏—Å–∞–Ω–∏–µ
        """)
    
    # –ü—Ä–∏–º–µ—Ä—ã HS –∫–æ–¥–æ–≤
    st.subheader("üîç –ü—Ä–∏–º–µ—Ä—ã HS –∫–æ–¥–æ–≤")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–∑ API
    examples = get_hs_codes_examples()
    
    if examples:
        for example in examples:
            with st.container():
                col1, col2 = st.columns([1, 3])
                with col1:
                    st.code(example.get('code', 'N/A'))
                with col2:
                    st.write(f"**{example.get('description', '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')}**")
                    st.caption(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {example.get('category', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
    else:
        st.info("–ü—Ä–∏–º–µ—Ä—ã HS –∫–æ–¥–æ–≤ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API")
    
    # –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    st.markdown("---")
    st.subheader("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("""
        **üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:**
        - Email: support@ai-declarant.tm
        - Telegram: @ai_declarant_bot
        - –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: 9:00 - 18:00 (–ø–Ω-–ø—Ç)
        """)
    
    with col2:
        st.markdown("""
        **üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:**
        - [–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è](docs/USER_GUIDE.md)
        - [API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](docs/API_ENDPOINTS.md)
        - [FAQ –∏ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º](docs/FAQ.md)
        """)

def get_hs_codes_count():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ HS –∫–æ–¥–æ–≤ –∏–∑ API"""
    try:
        api = APIClient()
        response = api.get('/hs-codes/')
        if response:
            return response.get('count', 'N/A')
    except:
        pass
    return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"

def get_api_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å API"""
    try:
        api = APIClient()
        response = api.get('/live/')
        if response and response.get('status') == 'alive':
            return "üü¢ –†–∞–±–æ—Ç–∞–µ—Ç"
    except:
        pass
    return "üî¥ –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

def get_hs_codes_examples():
    """–ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã HS –∫–æ–¥–æ–≤"""
    try:
        api = APIClient()
        response = api.get('/hs-codes/')
        if response and response.get('results'):
            return response['results'][:3]  # –ü–µ—Ä–≤—ã–µ 3 –ø—Ä–∏–º–µ—Ä–∞
    except:
        pass
    return [] 