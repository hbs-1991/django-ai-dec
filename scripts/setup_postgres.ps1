# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL –¥–ª—è AI DECLARANT
# –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

Write-Host "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL –¥–ª—è AI DECLARANT" -ForegroundColor Green

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
$DB_NAME = "ai_declarant_db"
$DB_USER = "ai_declarant"
$DB_PASSWORD = "password123"
$DB_HOST = "localhost"
$DB_PORT = "5432"

Write-Host "`nüìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:" -ForegroundColor Yellow
Write-Host "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DB_NAME"
Write-Host "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $DB_USER"
Write-Host "–ü–∞—Ä–æ–ª—å: $DB_PASSWORD"
Write-Host "–•–æ—Å—Ç: $DB_HOST"
Write-Host "–ü–æ—Ä—Ç: $DB_PORT"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ PostgreSQL
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PostgreSQL..." -ForegroundColor Blue

try {
    $psqlVersion = & psql --version
    Write-Host "‚úÖ PostgreSQL –Ω–∞–π–¥–µ–Ω: $psqlVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå PostgreSQL –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    Write-Host "üì• –°–∫–∞—á–∞–π—Ç–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PostgreSQL —Å https://www.postgresql.org/download/windows/" -ForegroundColor Yellow
    Write-Host "üîß –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ psql –¥–æ–±–∞–≤–ª–µ–Ω –≤ PATH" -ForegroundColor Yellow
    exit 1
}

# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
Write-Host "`nüóÑÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..." -ForegroundColor Blue

$sqlCommands = @"
-- –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';

-- –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
CREATE DATABASE $DB_NAME OWNER $DB_USER;

-- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤
GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;
ALTER USER $DB_USER CREATEDB;

-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
\c $DB_NAME

-- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ —Å—Ö–µ–º—É public
GRANT ALL ON SCHEMA public TO $DB_USER;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $DB_USER;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO $DB_USER;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO $DB_USER;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO $DB_USER;

\q
"@

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º SQL –∫–æ–º–∞–Ω–¥—ã –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
$tempSqlFile = [System.IO.Path]::GetTempFileName() + ".sql"
$sqlCommands | Out-File -FilePath $tempSqlFile -Encoding UTF8

Write-Host "üìù SQL –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø–∏—Å–∞–Ω—ã –≤: $tempSqlFile" -ForegroundColor Gray

# –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∫–æ–º–∞–Ω–¥—ã
Write-Host "üîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL –∫–æ–º–∞–Ω–¥..." -ForegroundColor Blue

try {
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ PostgreSQL –∫–∞–∫ superuser
    Write-Host "üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è postgres:" -ForegroundColor Yellow
    & psql -U postgres -h $DB_HOST -p $DB_PORT -f $tempSqlFile
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: $_" -ForegroundColor Red
    exit 1
} finally {
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    Remove-Item $tempSqlFile -ErrorAction SilentlyContinue
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
Write-Host "`nüß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Blue

try {
    $env:PGPASSWORD = $DB_PASSWORD
    $result = & psql -U $DB_USER -h $DB_HOST -p $DB_PORT -d $DB_NAME -c "SELECT version();"
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: $_" -ForegroundColor Red
} finally {
    Remove-Item Env:PGPASSWORD -ErrorAction SilentlyContinue
}

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env –¥–ª—è Django
Write-Host "`nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env –¥–ª—è Django..." -ForegroundColor Blue

$envContent = @"
# Django Settings
SECRET_KEY=django-insecure-change-me-in-production
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1

# Database (PostgreSQL)
DATABASE_URL=postgresql://$DB_USER`:$DB_PASSWORD@$DB_HOST`:$DB_PORT/$DB_NAME

# Celery & Redis (–±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –ø–æ–∑–∂–µ)
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Environment
USE_DOCKER=False

# OpenAI (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
# OPENAI_API_KEY=your-openai-api-key

# Email (–¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-password
"@

$envFile = "backend\.env"
$envContent | Out-File -FilePath $envFile -Encoding UTF8

Write-Host "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω: $envFile" -ForegroundColor Green

Write-Host "`nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "`nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
Write-Host "1. cd backend" -ForegroundColor Gray
Write-Host "2. python manage.py migrate" -ForegroundColor Gray
Write-Host "3. python manage.py createsuperuser" -ForegroundColor Gray
Write-Host "4. python manage.py runserver" -ForegroundColor Gray

Write-Host "`nüîó –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:" -ForegroundColor Cyan
Write-Host "postgresql://$DB_USER`:$DB_PASSWORD@$DB_HOST`:$DB_PORT/$DB_NAME" -ForegroundColor White 